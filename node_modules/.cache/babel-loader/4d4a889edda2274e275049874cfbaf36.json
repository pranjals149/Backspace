{"ast":null,"code":"var _jsxFileName = \"/media/dell/3ADC8576DC852D67/Users/DELL/Documents/Personal Projects/gdrive/firebase-google-drive-clone/src/components/google-drive/AddFolderButton.js\";\nimport React, { useState } from \"react\";\nimport { Button, Modal, Form } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFolderPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport { database } from \"../../firebase\";\nimport { useAuth } from \"../../contexts/AuthContext\";\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\";\nexport default function AddFolderButton({\n  currentFolder\n}) {\n  const [open, setOpen] = useState(false);\n  const [name, setName] = useState(\"\");\n  const {\n    currentUser\n  } = useAuth();\n\n  function openModal() {\n    setOpen(true);\n  }\n\n  function closeModal() {\n    setOpen(false);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (currentFolder == null) return;\n    const path = [...currentFolder.path];\n\n    if (currentFolder !== ROOT_FOLDER) {\n      path.push({\n        name: currentFolder.name,\n        id: currentFolder.id\n      });\n    }\n\n    database.folders.add({\n      name: name,\n      parentId: currentFolder.id,\n      userId: currentUser.uid,\n      path: path,\n      createdAt: database.getCurrentTimestamp()\n    });\n    setName(\"\");\n    closeModal();\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: openModal,\n    variant: \"outline-success\",\n    size: \"sm\",\n    style: {\n      fontSize: '20px',\n      margin: '10px',\n      display: 'flex'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faFolderPlus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      paddingLeft: '10px',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"Add Folder\")), /*#__PURE__*/React.createElement(Modal, {\n    show: open,\n    onHide: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, \"Folder Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n    type: \"text\",\n    required: true,\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Modal.Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"secondary\",\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Close\"), /*#__PURE__*/React.createElement(Button, {\n    variant: \"success\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Add Folder\")))));\n}","map":{"version":3,"sources":["/media/dell/3ADC8576DC852D67/Users/DELL/Documents/Personal Projects/gdrive/firebase-google-drive-clone/src/components/google-drive/AddFolderButton.js"],"names":["React","useState","Button","Modal","Form","FontAwesomeIcon","faFolderPlus","database","useAuth","ROOT_FOLDER","AddFolderButton","currentFolder","open","setOpen","name","setName","currentUser","openModal","closeModal","handleSubmit","e","preventDefault","path","push","id","folders","add","parentId","userId","uid","createdAt","getCurrentTimestamp","fontSize","margin","display","paddingLeft","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\"\nimport { Button, Modal, Form } from \"react-bootstrap\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faFolderPlus } from \"@fortawesome/free-solid-svg-icons\"\nimport { database } from \"../../firebase\"\nimport { useAuth } from \"../../contexts/AuthContext\"\nimport { ROOT_FOLDER } from \"../../hooks/useFolder\"\n\nexport default function AddFolderButton({ currentFolder }) {\n  const [open, setOpen] = useState(false)\n  const [name, setName] = useState(\"\")\n  const { currentUser } = useAuth()\n\n  function openModal() {\n    setOpen(true)\n  }\n\n  function closeModal() {\n    setOpen(false)\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    if (currentFolder == null) return\n\n    const path = [...currentFolder.path]\n    if (currentFolder !== ROOT_FOLDER) {\n      path.push({ name: currentFolder.name, id: currentFolder.id })\n    }\n\n    database.folders.add({\n      name: name,\n      parentId: currentFolder.id,\n      userId: currentUser.uid,\n      path: path,\n      createdAt: database.getCurrentTimestamp(),\n    })\n    setName(\"\")\n    closeModal()\n  }\n\n  return (\n    <>\n      <Button onClick={openModal} variant=\"outline-success\" size=\"sm\" style={{\n        fontSize: '20px',\n        margin: '10px',\n        display: 'flex'\n      }}>\n        <FontAwesomeIcon icon={faFolderPlus} />\n        <p\n          style={{\n            paddingLeft: '10px',\n            margin: 0\n          }}\n        >Add Folder</p>\n      </Button>\n      <Modal show={open} onHide={closeModal}>\n        <Form onSubmit={handleSubmit}>\n          <Modal.Body>\n            <Form.Group>\n              <Form.Label>Folder Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                required\n                value={name}\n                onChange={e => setName(e.target.value)}\n              />\n            </Form.Group>\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={closeModal}>\n              Close\n            </Button>\n            <Button variant=\"success\" type=\"submit\">\n              Add Folder\n            </Button>\n          </Modal.Footer>\n        </Form>\n      </Modal>\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}